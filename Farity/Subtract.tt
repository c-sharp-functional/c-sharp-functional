<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#
	var types = new [] {
			"decimal",
			"double",
			"float",
			"int",
			"long",
			"uint",
			"ulong",
			"TimeSpan"
		};
	var nullableTypes = new [] {
			"decimal?",
			"double?",
			"float?",
			"int?",
			"long?",
			"uint?",
			"ulong?"
		};
#>
using System;

namespace Farity
{
	public static partial class F
	{
<# for(var i = 0; i< types.Length; i++)
{
		var type = types[i]; #>
		public static <#= type #> Subtract(<#= type #> a, <#= type #> b) => a - b;
<# } #>
<# for(var i = 0; i< nullableTypes.Length; i++)
{
		var type = nullableTypes[i]; #>
		public static <#= type #> Subtract(<#= type #> a, <#= type #> b)
			=> a == null && b == null ? (<#= type #>)null : (a ?? 0)- (b ?? 0);
<# } #>
		public static TimeSpan? Subtract(TimeSpan? a, TimeSpan? b)
			=> a == null && b == null ? (TimeSpan?)null : (a ?? TimeSpan.Zero) - (b ?? TimeSpan.Zero);
	}
}
